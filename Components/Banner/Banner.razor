@using ECommerceApp.Components.Buttons
@using ECommerceApp.Components.Loading
@using ECommerceApp.Data
@using ECommerceApp.Services

@inject IProductApi ProductApi
@inject NavigationManager NavigationManager

@if (isLoading)
{
    <Spinner />
}
@if (BannerProduct != null)
{
    <div class="hero">
        <div class="container">
            <div class="row justify-content-between">
                <div class="col-lg-5">
                    <div class="intro-excerpt">
                        <h1>@BannerProduct.Title</h1>
                        <p class="mb-4">@BannerProduct.Description</p>
                        <div>
                            <Button Label="Shop Now" ButtonType="Secondary" OnClick="@NavigateToShop" />
                            <a href="/product/@BannerProduct.Id" class="btn btn-outline-white me-2">Explore</a>
                        </div>
                    </div>
                </div>
                <div class="col-lg-7">
                    <div class="hero-img-wrap h-100 w-100">
                        <img src="@BannerProduct.Image" class="img-fluid  w-100 h-100" style="object-fit: cover">
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {

    private IProduct BannerProduct;
    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        var random = new Random();
        int randomProductId = random.Next(1, 21);
        var product = await ProductApi.GetSingleProduct(randomProductId);
        BannerProduct = product;
        isLoading = false;
    }

    private void NavigateToShop()
    {
        NavigationManager.NavigateTo("/shop");
    }



}
